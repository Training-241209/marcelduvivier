package com.example.ERS.entity;

import com.fasterxml.jackson.annotation.JsonBackReference;

import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;


@Entity
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
@EqualsAndHashCode
@Table(name="reimbursement")
public class Reimbursement {

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private Integer reimbursementId;
    /**
     * A description for this Reimbursement (must be unique and not blank)
     */
    private String description;
    /*
     * The amount for reimbursement 
     */
    private Double amount;
    /**
     * A status for this Reimbursement 
     */
    private String status;
    /*
     * The id of the requesting user
     */
    @ManyToOne
    @JoinColumn(name="userid")
    @JsonBackReference
    private User userID;

    /**
     * When posting a new Reimbursement, the id can be generated by the database. In that case, a constructor without
     * ReimbursementId is needed.
     * @param description
     * @param amount
     * @param status
     * @param userID
     */
    public Reimbursement(String description, Double amount, String status){
        this.description = description;
        this.amount = amount;
        this.status = status;
    }


    /**
     * Overriding the default toString() method allows for easy debugging.
     * @return a String representation of this class.
     */
    @Override
    public String toString() {
        return "Reimbursement{" +
                "reimbursementId=" + reimbursementId +
                ", description='" + description + '\'' +
                ", amount='" + amount + '\'' +
                ", status='" + status + '\'' +
                ", userID='" + userID + '\'' +
                '}';
    }
}
